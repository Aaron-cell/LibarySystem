<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
        http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task-4.1.xsd">

	  <!--启用注解驱动的定时任务-->
    <task:annotation-driven/>   
    <!--加下面的线程池配置时，加属性scheduler="myScheduler"-->
    <!--配置定时任务的线程池-->
    <!--<task:scheduler id="myScheduler" pool-size="5"/>-->
    <bean id="myTask" class="com.eighth.controller.MyTask"></bean>
    <task:scheduled-tasks>
        <!-- 这里表示的是每隔五秒执行一次 -->
        <task:scheduled ref="myTask" method="checkTimeOut" cron="*/5 * * * * ?" />
    </task:scheduled-tasks>
    
    <!--启动注解识别-->
    <context:annotation-config/>

    <context:component-scan base-package="com.eighth.controller">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <mvc:annotation-driven />

    <!--开通静态资源的访问-->
    <mvc:default-servlet-handler />

    <!-- 视图定位 -->
    <bean
            class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>
     <!--  用到时在说 ！ 对上传文件的解析-->
  <!--   <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/fore*"/>
            <bean class="com.how2java.tmall.interceptor.LoginInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/fore*"/>
            <bean class="com.how2java.tmall.interceptor.OtherInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>  -->
    <!--没有设置配置文件上传  -->
    <bean id="multipartResolver"    
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- set the max upload size100MB -->    
        <property name="maxUploadSize">    
            <value>104857600</value>    
        </property>    
        <property name="maxInMemorySize">    
            <value>4096</value>    
        </property>   
        <property name="defaultEncoding">  
            <value>utf-8</value>  
        </property>  
	</bean>   
    
     <!-- 配置拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 拦截所有mvc控制器 -->
			<mvc:mapping path="/** "/>
			<!-- mvc:exclude-mapping是另外一种拦截，它可以在你后来的测试中对某个页面进行不拦截，这样就不用在
				LoginInterceptor的preHandler方法里面获取不拦截的请求uri地址了(优选) -->
			<mvc:exclude-mapping path="/fore/**" />
			<mvc:exclude-mapping path="/login" />
			<mvc:exclude-mapping path="/css/*" />
			<mvc:exclude-mapping path="/font/*" />
			<mvc:exclude-mapping path="/images/**" />
			<mvc:exclude-mapping path="/js/*" />
			<mvc:exclude-mapping path="/json/*" />
			<mvc:exclude-mapping path="/skin/*" />
			<bean class="com.eighth.interceptor.LoginInterceptor"></bean>			
		</mvc:interceptor>
	</mvc:interceptors>
</beans>